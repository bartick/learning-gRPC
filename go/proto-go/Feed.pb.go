// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: Feed.proto

package feed

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The structure how feeds should show up in the response
type FeedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedId          int32  `protobuf:"varint,1,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
	FeedTitle       string `protobuf:"bytes,2,opt,name=feed_title,json=feedTitle,proto3" json:"feed_title,omitempty"`
	FeedContent     string `protobuf:"bytes,3,opt,name=feed_content,json=feedContent,proto3" json:"feed_content,omitempty"`
	FeedPublishTime string `protobuf:"bytes,4,opt,name=feed_publish_time,json=feedPublishTime,proto3" json:"feed_publish_time,omitempty"`
	FeedAuthor      string `protobuf:"bytes,5,opt,name=feed_author,json=feedAuthor,proto3" json:"feed_author,omitempty"`
}

func (x *FeedReply) Reset() {
	*x = FeedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feed_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedReply) ProtoMessage() {}

func (x *FeedReply) ProtoReflect() protoreflect.Message {
	mi := &file_Feed_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedReply.ProtoReflect.Descriptor instead.
func (*FeedReply) Descriptor() ([]byte, []int) {
	return file_Feed_proto_rawDescGZIP(), []int{0}
}

func (x *FeedReply) GetFeedId() int32 {
	if x != nil {
		return x.FeedId
	}
	return 0
}

func (x *FeedReply) GetFeedTitle() string {
	if x != nil {
		return x.FeedTitle
	}
	return ""
}

func (x *FeedReply) GetFeedContent() string {
	if x != nil {
		return x.FeedContent
	}
	return ""
}

func (x *FeedReply) GetFeedPublishTime() string {
	if x != nil {
		return x.FeedPublishTime
	}
	return ""
}

func (x *FeedReply) GetFeedAuthor() string {
	if x != nil {
		return x.FeedAuthor
	}
	return ""
}

// The structure how feeds should be sent to the server for creation
type FeedPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedTitle   string `protobuf:"bytes,1,opt,name=feed_title,json=feedTitle,proto3" json:"feed_title,omitempty"`
	FeedContent string `protobuf:"bytes,2,opt,name=feed_content,json=feedContent,proto3" json:"feed_content,omitempty"`
	FeedAuthor  string `protobuf:"bytes,3,opt,name=feed_author,json=feedAuthor,proto3" json:"feed_author,omitempty"`
}

func (x *FeedPost) Reset() {
	*x = FeedPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feed_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedPost) ProtoMessage() {}

func (x *FeedPost) ProtoReflect() protoreflect.Message {
	mi := &file_Feed_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedPost.ProtoReflect.Descriptor instead.
func (*FeedPost) Descriptor() ([]byte, []int) {
	return file_Feed_proto_rawDescGZIP(), []int{1}
}

func (x *FeedPost) GetFeedTitle() string {
	if x != nil {
		return x.FeedTitle
	}
	return ""
}

func (x *FeedPost) GetFeedContent() string {
	if x != nil {
		return x.FeedContent
	}
	return ""
}

func (x *FeedPost) GetFeedAuthor() string {
	if x != nil {
		return x.FeedAuthor
	}
	return ""
}

// The structure how feeds should be sent to the server to search for or any furthur processing
type FeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedId string `protobuf:"bytes,1,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`
}

func (x *FeedRequest) Reset() {
	*x = FeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feed_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedRequest) ProtoMessage() {}

func (x *FeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Feed_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedRequest.ProtoReflect.Descriptor instead.
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return file_Feed_proto_rawDescGZIP(), []int{2}
}

func (x *FeedRequest) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

// Success message for the feed deletion
type FeedSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *FeedSuccess) Reset() {
	*x = FeedSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feed_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedSuccess) ProtoMessage() {}

func (x *FeedSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_Feed_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedSuccess.ProtoReflect.Descriptor instead.
func (*FeedSuccess) Descriptor() ([]byte, []int) {
	return file_Feed_proto_rawDescGZIP(), []int{3}
}

func (x *FeedSuccess) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// All feeds are returned in this message
type AllFeeds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Feeds []*FeedReply `protobuf:"bytes,1,rep,name=feeds,proto3" json:"feeds,omitempty"`
}

func (x *AllFeeds) Reset() {
	*x = AllFeeds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Feed_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFeeds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFeeds) ProtoMessage() {}

func (x *AllFeeds) ProtoReflect() protoreflect.Message {
	mi := &file_Feed_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFeeds.ProtoReflect.Descriptor instead.
func (*AllFeeds) Descriptor() ([]byte, []int) {
	return file_Feed_proto_rawDescGZIP(), []int{4}
}

func (x *AllFeeds) GetFeeds() []*FeedReply {
	if x != nil {
		return x.Feeds
	}
	return nil
}

var File_Feed_proto protoreflect.FileDescriptor

var file_Feed_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x46, 0x65, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x66, 0x65,
	0x65, 0x64, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb3, 0x01, 0x0a, 0x09, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x65, 0x65, 0x64,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x65, 0x65, 0x64,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x6d, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x65, 0x65, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x22, 0x26, 0x0a, 0x0b, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x0b,
	0x46, 0x65, 0x65, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64,
	0x73, 0x12, 0x25, 0x0a, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x05, 0x66, 0x65, 0x65, 0x64, 0x73, 0x32, 0xd4, 0x01, 0x0a, 0x0b, 0x46, 0x65, 0x65,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x41, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x64, 0x73, 0x12, 0x2b,
	0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x12, 0x0e, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x11, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x2e, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42,
	0x0b, 0x5a, 0x09, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Feed_proto_rawDescOnce sync.Once
	file_Feed_proto_rawDescData = file_Feed_proto_rawDesc
)

func file_Feed_proto_rawDescGZIP() []byte {
	file_Feed_proto_rawDescOnce.Do(func() {
		file_Feed_proto_rawDescData = protoimpl.X.CompressGZIP(file_Feed_proto_rawDescData)
	})
	return file_Feed_proto_rawDescData
}

var file_Feed_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_Feed_proto_goTypes = []interface{}{
	(*FeedReply)(nil),     // 0: feed.FeedReply
	(*FeedPost)(nil),      // 1: feed.FeedPost
	(*FeedRequest)(nil),   // 2: feed.FeedRequest
	(*FeedSuccess)(nil),   // 3: feed.FeedSuccess
	(*AllFeeds)(nil),      // 4: feed.AllFeeds
	(*emptypb.Empty)(nil), // 5: google.protobuf.Empty
}
var file_Feed_proto_depIdxs = []int32{
	0, // 0: feed.AllFeeds.feeds:type_name -> feed.FeedReply
	2, // 1: feed.FeedService.GetFeed:input_type -> feed.FeedRequest
	5, // 2: feed.FeedService.GetAllFeeds:input_type -> google.protobuf.Empty
	1, // 3: feed.FeedService.PostFeed:input_type -> feed.FeedPost
	2, // 4: feed.FeedService.DeleteFeed:input_type -> feed.FeedRequest
	0, // 5: feed.FeedService.GetFeed:output_type -> feed.FeedReply
	4, // 6: feed.FeedService.GetAllFeeds:output_type -> feed.AllFeeds
	0, // 7: feed.FeedService.PostFeed:output_type -> feed.FeedReply
	3, // 8: feed.FeedService.DeleteFeed:output_type -> feed.FeedSuccess
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_Feed_proto_init() }
func file_Feed_proto_init() {
	if File_Feed_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Feed_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feed_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feed_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feed_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Feed_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFeeds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Feed_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Feed_proto_goTypes,
		DependencyIndexes: file_Feed_proto_depIdxs,
		MessageInfos:      file_Feed_proto_msgTypes,
	}.Build()
	File_Feed_proto = out.File
	file_Feed_proto_rawDesc = nil
	file_Feed_proto_goTypes = nil
	file_Feed_proto_depIdxs = nil
}
